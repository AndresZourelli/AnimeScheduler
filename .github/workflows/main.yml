# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-push-images:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - 
        name: Checkout
        uses: actions/checkout@v3

      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - 
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - 
        name: Docker Cache
        uses: actions/cache@v3.0.4
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: /tmp/.buildx-cache
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
          restore-keys: ${{ runner.os }}-buildx-

      - 
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - 
        name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Docker meta
          id: meta-webapp
          uses: docker/metadata-action@v4
          with:
            images: |
              azourelli/anicafe-webapp
            tags: |
              type=ref,event=branch
              type=ref,event=pr
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}
      -
        name: Docker meta
          id: meta-server
          uses: docker/metadata-action@v4
          with:
            images: |
              azourelli/anicafe-server
            tags: |
              type=ref,event=branch
              type=ref,event=pr
              type=semver,pattern={{version}}
              type=semver,pattern={{major}}.{{minor}}

      -
        name: Build and push anicafe-webapp
        uses: docker/build-push-action@v3
        id: build-publish-anicafe-webapp
        with:
          context: ./client
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-webapp.outputs.tags }}
          labels: ${{ steps.meta-webapp.outputs.labels }}

      -
        name: Build and push anicafe-server
        uses: docker/build-push-action@v3
        id: build-publish-anicafe-server
        with:
          context: ./server
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-server.outputs.tags }}
          labels: ${{ steps.meta-server.outputs.labels }}